sudo: required

dist: bionic

language:
  # Trick Travis into using bionic (see https://travis-ci.community/t/for-dist-bionic-xenial-vm-is-used-instead-with-language-rust/4487/3)
  # We're building on Docker, so the actual language doesn't matter.
  - python

services:
  - docker

cache:
  directories:
    - $HOME/build/iovisor/bpftrace/build-$TYPE-$BASE/embedded_llvm-prefix/
    - $HOME/build/iovisor/bpftrace/build-$TYPE-$BASE/embedded_clang-prefix/

matrix:
  include:
    - name: "clang-format"
      script:
        - git clang-format master
        - git diff --exit-code
      env: LLVM_VERSION=8 BASE=bionic
    # Certain tests are disabled on our LLVM 5 builds because they are flaky
    # when bpftrace is compiled with musl libc. They should still be capable
    # of passing occasionally.
    # String comparisons and args multiple tracepoints tests are the exception
    # - they are just broken in debug builds.
    - name: "Static LLVM 5 Debug"
      env: LLVM_VERSION=5.0 BASE=alpine TYPE=Debug STATIC_LINKING=ON EMBED_LIBC=ON TEST_ARGS="--gtest_filter=codegen.*:-codegen.call_ntop_char4:codegen.call_ntop_char16:codegen.call_printf:codegen.enum_declaration:codegen.macro_definition:codegen.printf_offsets:codegen.struct_*:codegen.string_equal_comparison:codegen.string_not_equal_comparison:codegen.strncmp_test:codegen.args_multiple_tracepoints*:codegen.logical_and_or_different_type"
    - name: "Static LLVM 5 Release"
      env: LLVM_VERSION=5.0 BASE=alpine TYPE=Release STATIC_LINKING=ON EMBED_LIBC=ON TEST_ARGS="--gtest_filter=codegen.*:-codegen.call_ntop_char4:codegen.call_ntop_char16:codegen.call_printf:codegen.enum_declaration:codegen.macro_definition:codegen.printf_offsets:codegen.struct_*:codegen.args_multiple_tracepoints*:codegen.logical_and_or_different_type"

    - name: "LLVM 6 Debug"
      env: LLVM_VERSION=6.0 BASE=bionic TYPE=Debug RUN_ALL_TESTS=1 RUNTIME_TEST_DISABLE=builtin.cgroup
    - name: "LLVM 6 Release"
      env: LLVM_VERSION=6.0 BASE=bionic TYPE=Release RUN_ALL_TESTS=1 RUNTIME_TEST_DISABLE=builtin.cgroup

    - name: "LLVM 7 Debug"
      env: LLVM_VERSION=7 BASE=bionic TYPE=Debug RUN_ALL_TESTS=1 RUNTIME_TEST_DISABLE=builtin.cgroup
    - name: "LLVM 7 Release"
      env: LLVM_VERSION=7 BASE=bionic TYPE=Release RUN_ALL_TESTS=1 RUNTIME_TEST_DISABLE=builtin.cgroup

    - name: "LLVM 8 Debug"
      env: LLVM_VERSION=8 BASE=bionic TYPE=Debug RUN_ALL_TESTS=1 RUNTIME_TEST_DISABLE=builtin.cgroup
    - name: "LLVM 8 Release"
      env: LLVM_VERSION=8 BASE=bionic TYPE=Release RUN_ALL_TESTS=1 RUNTIME_TEST_DISABLE=builtin.cgroup

    - name: "Static+glibc LLVM 8 - LLVM artifact cache build - Debug"
      env: LLVM_VERSION=8 BASE=bionic-static STATIC_LINKING=ON STATIC_LIBC=OFF EMBED_LLVM=ON EMBED_CLANG=ON TYPE=Debug RUN_ALL_TESTS=1 RUNTIME_TEST_DISABLE=builtin.cgroup
      install:
        - docker build --build-arg LLVM_VERSION=$LLVM_VERSION -t bpftrace-builder-$BASE-llvm-$LLVM_VERSION -f docker/Dockerfile.$BASE docker/
      script:
        - sudo docker run --privileged --rm -it -v ${PWD}:${PWD} -v /sys/kernel/debug:/sys/kernel/debug:rw -v /lib/modules:/lib/modules:ro -v /usr/src:/usr/src:ro -e STATIC_LINKING=$STATIC_LINKING -e STATIC_LIBC=$STATIC_LIBC -e EMBED_LLVM=$EMBED_LLVM -e EMBED_CLANG=$EMBED_CLANG -e LLVM_VERSION=$LLVM_VERSION -e DEPS_ONLY=ON -e CI_TIMEOUT=2400 bpftrace-builder-$BASE-llvm-$LLVM_VERSION ${PWD}/build-$TYPE-$BASE $TYPE -j`getconf _NPROCESSORS_ONLN`
    - name: "Static+glibc LLVM 8 - LLVM artifact cache build - Release"
      env: LLVM_VERSION=8 BASE=bionic-static STATIC_LINKING=ON STATIC_LIBC=OFF EMBED_LLVM=ON EMBED_CLANG=ON TYPE=Release RUN_ALL_TESTS=1 RUNTIME_TEST_DISABLE=builtin.cgroup
      install:
        - docker build --build-arg LLVM_VERSION=$LLVM_VERSION -t bpftrace-builder-$BASE-llvm-$LLVM_VERSION -f docker/Dockerfile.$BASE docker/
      script:
        - sudo docker run --privileged --rm -it -v ${PWD}:${PWD} -v /sys/kernel/debug:/sys/kernel/debug:rw -v /lib/modules:/lib/modules:ro -v /usr/src:/usr/src:ro -e STATIC_LINKING=$STATIC_LINKING -e STATIC_LIBC=$STATIC_LIBC -e EMBED_LLVM=$EMBED_LLVM -e EMBED_CLANG=$EMBED_CLANG -e LLVM_VERSION=$LLVM_VERSION -e DEPS_ONLY=ON -e CI_TIMEOUT=2400 bpftrace-builder-$BASE-llvm-$LLVM_VERSION ${PWD}/build-$TYPE-$BASE $TYPE -j`getconf _NPROCESSORS_ONLN`

    - name: "Static+glibc LLVM 8 Debug"
      env: LLVM_VERSION=8 BASE=bionic-static STATIC_LINKING=ON STATIC_LIBC=OFF EMBED_LLVM=ON EMBED_CLANG=ON TYPE=Debug RUN_ALL_TESTS=1 RUNTIME_TEST_DISABLE=builtin.cgroup
    - name: "Static+glibc LLVM 8 Release"
      env: LLVM_VERSION=8 BASE=bionic-static STATIC_LINKING=ON STATIC_LIBC=OFF EMBED_LLVM=ON EMBED_CLANG=ON TYPE=Release RUN_ALL_TESTS=1 RUNTIME_TEST_DISABLE=builtin.cgroup  # FIXME add RELEASE_BINARY=ON
install:
  - sudo apt-get install linux-headers-$(uname -r)
  - docker build --build-arg LLVM_VERSION=$LLVM_VERSION -t bpftrace-builder-$BASE-llvm-$LLVM_VERSION -f docker/Dockerfile.$BASE docker/

script:
  - sudo docker run --privileged --rm -it -v ${PWD}:${PWD} -v /sys/kernel/debug:/sys/kernel/debug:rw -v /lib/modules:/lib/modules:ro -v /usr/src:/usr/src:ro -e STATIC_LINKING=$STATIC_LINKING -e STATIC_LIBC=$STATIC_LIBC -e EMBED_LLVM=$EMBED_LLVM -e EMBED_CLANG=$EMBED_CLANG -e LLVM_VERSION=$LLVM_VERSION -e RUN_ALL_TESTS=$RUN_ALL_TESTS -e TEST_ARGS=$TEST_ARGS -e RUNTIME_TEST_DISABLE=$RUNTIME_TEST_DISABLE,regression.logical_and_or_different_sizes,variable.tracepoint arg casts in predicates,other.strncmp function argument,other.bitfield access,intcast.Casting retval should work,intcast.Sum casted retval,watchpoint.watchpoint - absolute address,array.array element access - assign to map,array.array element access - assign to var,intptrcast.Sum casted value,intptrcast.Casting ints,builtin.sarg,builtin.func_uprobe bpftrace-builder-$BASE-llvm-$LLVM_VERSION ${PWD}/build-$TYPE-$BASE $TYPE -j`getconf _NPROCESSORS_ONLN` # -e CI_TIMEOUT=2400

# FIXME disabled runtime tests
#   these are probably from compiling test programs statically?
# regression.logical_and_or_different_sizes,variable.tracepoint arg casts in predicates,other.strncmp function argument,other.bitfield access,intcast.Casting retval should work,intcast.Sum casted retval,watchpoint.watchpoint - absolute address,array.array element access - assign to map,array.array element access - assign to var,intptrcast.Sum casted value,intptrcast.Casting ints,builtin.sarg,builtin.func_uprobe

#before_deploy:
#  - FIXME copy binaries out of static builds
# deploy:
#   provider: releases
#   api_key:
#     secure: YOUR_API_KEY_ENCRYPTED
#   file:
#     - "FILE 1"
#     - "FILE 2"
#   skip_cleanup: true
#   on:
#     tags: true
#     condition: $RELEASE_BINARY = ON

notifications:
  irc:
    channels:
      # Running the following command generates an encrypted string that only
      # decrypts properly in iovisor/bpftrace. This prevents forks from
      # spamming the IRC channel.
      #
      #     travis encrypt -r "iovisor/bpftrace" "irc.oftc.net#bpftrace"
      #
      - secure: "wIAz2oF8z8Kirt0pjAdOT2z9GOm3KtlPfZzdMUHvnDkehT0dIVLcbMvmPOdje/0MJVQXpl3/XguT31wqJ+qhR0el/ZWAxc53ZT7lQRP6v/yKS9AJWO2RYYFMjHldTkdYe5TyKcX3IEY7ixSblkO0eDGyKDC2eYqghSFnclbC83oQVe0qDNewxo4W5gjQjW9Bmly6c7QYxHp/qTYkwP58zOvjMXKupPgk6xjqhI1sShpT5V/1tx6ATq5BPOUWJtIz7VvdrFar1F5r+RuBLz7z4kNhu9ofXfbxOpyuuNIaTPgGBRLa98oHm6xCNNCPouVM+zNXiJLcb5aDcL1DkhueMOYrbOXHp5DAvq58t29zLiksDWY89mo/gp555ZrVibnhj47mIxQ6QFv77I0nJWsk5F11tsVI0zDcBye6nlHJfLqZIPzGdrp4JPpAghLZq2Fgnhqq1gcdax1pHIp4f90XsuPZsf7My24/2oDXnrKMofNIaA4ubzreTDGxhL+xgQK15Tz2XVcjn5MRAup0z6WN+nEWbDF52iQxyKBhU62zXCuvFG62lho3E8lU0e7dQXlFJnG/KY/bW1fhjeC8BLYdejqE/iZkZp2jxqTiAAoTcrTws/AhaXHFNVVTiiVpekvbTbGWEbd8Hffl/+LNmCrjEDrQyCe//QLyy9bjcG+I+Jk="
    on_success: change
    on_failure: always
