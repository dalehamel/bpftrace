ARG ALPINE_VERSION=3.10
FROM alpine:${ALPINE_VERSION}

ARG bcc_ref="v0.8.0"
ARG LLVM_VERSION="8"
ENV LLVM_VERSION=$LLVM_VERSION

RUN apk add --update \
  bash \
  bison \
  binutils-dev \
  build-base \
  clang-dev \
  clang-static \
  curl \
  cmake \
  elfutils-dev \
  flex-dev \
  git \
  libxml2-dev \
  linux-headers \
  llvm${LLVM_VERSION}-dev \
  llvm${LLVM_VERSION}-static \
  python \
  zlib-dev

# Put LLVM directories where CMake expects them to be
RUN ln -s /usr/lib/cmake/llvm${LLVM_VERSION} /usr/lib/cmake/llvm
RUN ln -s /usr/include/llvm${LLVM_VERSION}/llvm /usr/include/llvm
RUN ln -s /usr/include/llvm${LLVM_VERSION}/llvm-c /usr/include/llvm-c

# Stub to fix Makefile looking for this by soname
RUN ln -sf /usr/lib/libffi.so.6 /usr/lib/libffi.so

# Build BCC and install static libs
RUN mkdir -p /src && git clone https://github.com/iovisor/bcc /src/bcc
WORKDIR /src/bcc

# RUN git reset --hard $bcc_ref && mkdir build && cd build && \
#     cmake -DCMAKE_INSTALL_PREFIX=/usr/local ../ && make -j$(nproc) && \
#     make install &&  mkdir -p /usr/local/lib && \
#     cp src/cc/libbcc.a /usr/local/lib/libbcc.a && \
#     cp src/cc/libbcc-loader-static.a /usr/local/lib/libbcc-loader-static.a && \
#     cp ./src/cc/libbcc_bpf.a /usr/local/lib/libbpf.a
# Alpine currently does not have a package for bcc. Until they do,
# we'll peg the alpine build to bcc v0.8.0
#
# We're building here so docker can cache the build layer

# FIXME use bcc_ref
# FIXME alpine build for bcc 0.12.0 is broken, try later versions to try and
# find the regression, looks like bpf headers
WORKDIR /
RUN curl -L https://github.com/iovisor/bcc/archive/v0.8.0.tar.gz \
  --output /bcc.tar.gz
RUN tar xvf /bcc.tar.gz
RUN mv bcc-0.8.0 bcc
RUN cd /bcc && mkdir build && cd build && cmake .. && make install -j4 && \
  cp src/cc/libbcc.a /usr/local/lib64/libbcc.a && \
  cp src/cc/libbcc-loader-static.a /usr/local/lib64/libbcc-loader-static.a && \
  cp src/cc/libbpf.a /usr/local/lib64/libbpf.a

COPY build.sh /build.sh
RUN chmod 755 /build.sh
ENTRYPOINT ["/bin/sh", "/build.sh"]
